{"version":3,"sources":["services/StorageService.js","services/CartService.js","Components/Product.js","Pages/PageCart.js","Components/Body.js","Components/NumberCart.js","Components/Header.js","Components/Footer.js","Pages/PageStore.js","App.js","index.js"],"names":["StorageService","item","ref","obj","str","JSON","stringify","localStorage","setItem","getItem","parse","getCartOrDefault","cart","products","CartService","product","push","name","index","indexOf","splice","Product","fromCart","handleAddToCart","useCallback","window","location","href","handleRemoveFromCart","event","id","target","attributes","value","className","src","image","width","alt","regular_price","discount_percentage","actual_price","installments","onClick","Cart","useState","setProducts","useEffect","foundProducts","map","Dbjson","filter","p","Body","NumberCart","length","Header","Footer","PageStore","App","path","exact","component","PageCart","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a45278e.chunk.js","sourcesContent":["//Pega a lista em string transforma em objeto\nconst parse = (str) => {\n    return JSON.parse(str);\n};\n\n//Pega a lista em obj e transforma em string\nconst stringify = (obj) => {\n    return JSON.stringify(obj, null, 0);\n};\n\n//Pra adicionar e usar o localStorage\nexport const StorageService = {\n    //chamada para adicionar o produto no localStorage\n    addToStorage(item, ref) {\n        const str = stringify(item);\n        localStorage.setItem(ref, str);\n    },\n\n    //chamada para utilizar o produto salvo no localStorage\n    getFromStorage(ref) {\n        const str = localStorage.getItem(ref);\n        \n        //garantir que é um objeto no uso\n        if (!!str)\n            return parse(str);\n        \n        return null;\n    },\n};\n","import { StorageService } from \"./StorageService\";\n\n//função para alocar valores do storage em na const cart.\nconst getCartOrDefault = () => {\n    const cart = StorageService.getFromStorage('cart');\n    \n    if (cart)\n        return cart;\n    \n    return { products: [] };\n   \n};\n\n// função para adicionar, ler e remover os produtos da PageCart.\nexport const CartService = {\n    addProductToCart(product) {\n        const cart = getCartOrDefault();\n\n        cart.products.push(product.name + ' ' + product['color_slug']);\n\n        StorageService.addToStorage(cart, 'cart');\n    },\n\n    readCartProducts() {\n        return getCartOrDefault().products;\n        \n    },\n\n    removeCartProduct(name) {\n        const cart = getCartOrDefault();\n        const index = cart.products.indexOf(name);\n     \n        cart.products.splice(index, 1);\n        StorageService.addToStorage(cart, 'cart');\n    },\n};\n","import { useCallback } from 'react';\nimport { CartService } from '../services/CartService';\n\n\n// COMPONENTE QUE ENVIA AS INFORMAÇÕES PARA PAGESTORE\n\n\nexport default function Product({ product, fromCart = false }) {\n\n  //Chamada para adicionar o produto na PageCart.\n  const handleAddToCart = useCallback(() => {\n    CartService.addProductToCart(product);\n    window.location.href = \"/\" //\n  }, [product]);\n\n  //Chamada para remover o produto adicionado na PageCart.\n  const handleRemoveFromCart = useCallback((event) => {\n    const id = event.target.attributes['data-product'].value;\n    CartService.removeCartProduct(id);\n    window.location.href = \"/Carrinho\";\n  }, []);\n\n  // Função para adicionar nos botões de Adicionar e Remover.\n  // Adicionada a função de verificação de disponibilidade.\n  const renderAddToCart = () => {\n    if (product[\"on_sale\"] === false) {\n      return (\n        <p className=\"availability\">PRODUTO INDISPONÍVEL</p>\n      )\n    } if (!fromCart) {\n      return (\n        <button className=\"btn\" onClick={handleAddToCart}>\n          Adicionar ao Carrinho\n        </button>\n      );\n    } else {\n      return (\n        <div>\n          <button className=\"btn\"\n            data-product={product.name + ' ' + product['color_slug']}\n            onClick={handleRemoveFromCart}>\n            Remover do Carrinho\n          </button>\n        </div>\n      );\n    }\n  };\n\n\n  // Mostrar preço com desconto\n  function Price() {\n    if (product.discount_percentage !== \"\") {\n      return (\n        <p className=\"actualPrice\"><strong>POR: {product.actual_price}</strong></p>\n      )\n    } else { return \"\" }\n  }\n\n  // Mostrar % do desconto\n  function Percent() {\n    if (product.discount_percentage !== \"\") {\n      return (<p className=\"discPercent\">* -{product.discount_percentage}</p>)\n    } else { return \"\" }\n  }\n\n  // Renderizado no Cart dos produtos \n  return (\n    <div className=\"produtos\">\n      <img\n        className=\"imagem\"\n        src={product.image}\n        width=\"250px\"\n        alt=\"Imagem do Produto\"\n      />\n      <h3 className=\"name\">{product.name}</h3>\n      <div className=\"discDiv\">\n        <p className=\"regularPrice\"><strong>{product.regular_price}</strong></p>\n        {Percent()}\n      </div>\n      {Price()}\n      <p>Em até {product.installments}</p>\n      <select name='tamanho' id='tamanho'>\n      <option value='PP'>PP</option>\n      <option value='P'>P</option>\n      <option value='M'>M</option>\n      <option value='G'>G</option>\n      <option value='GG'>GG</option>\n      </select>\n      {renderAddToCart()}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport Product from '../Components/Product';\nimport Dbjson from '../Data/db.json';\nimport { CartService } from '../services/CartService';\n\n\n// Função Carrinho: pega a leitura dos produtos salvos em localStorage, mapeia em db.json para exibir apenas o produto escolhido.\nexport default function Cart() {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    const cartProducts = CartService.readCartProducts();\n\n    const foundProducts = cartProducts.map(name => {\n      return Dbjson.products.filter(p => p.name + ' ' + p['color_slug'] === name)[0];\n    });\n\n    setProducts(foundProducts);\n  }, []);\n\n\n  // o que aparece na tela\n  return (\n    <>\n      <div className=\"top\">\n        <div className=\"title\">\n          <img\n            src=\"https://www.conferecartoes.com.br/hubfs/confere-shop-logo.png\"\n            width=\"300px\"\n            alt=\"Logo\"\n          />\n          \n        </div>\n        <div className='voltar'>\n           <a href=\"/\"><img src={'https://image.flaticon.com/icons/png/512/786/786197.png'} width=\"50px\" alt=\"Voltar loja\"/></a>\n        </div>\n        <div className=\"title2\">\n          <h1>Carrinho de Compras</h1>\n        </div>\n      </div>\n      <div className=\"produtosCarrinho\">\n        <div className=\"finalCarrinho\">\n          <button className=\"btnFinal\">Finalizar Compra</button>\n        </div>\n        <h2 className=\"titulolista\">Lista de Produtos no Carrinho:</h2>\n        <div className=\"lista\">\n          {products?.map((product, index) => (\n            <Product key={index} product={product} fromCart={true} />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\n// PAGINA DO CARRINHO COM ROTA\n","import React from 'react';\nimport Dbjson from '../Data/db.json';\nimport Product from './Product';\n\n\nexport default function Body() {\n  return (\n    <div className=\"lista\">\n      {Dbjson.products?.map((product, index) => (\n        <Product key={index} product={product} />\n      ))}\n    </div>\n  );\n}\n\n// PRODUTOS LISTADOS NA PÁGINA INICIAL\n// PRODUTOS FORAM LISTADOS PARA O COMPONENTE PRODUCT.JS\n\n  ","import { CartService } from \"../services/CartService\"\n\n\n\nexport default function NumberCart() \n{const products = CartService.readCartProducts()\n      return (\n      <div className='numCart'>\n           {products.length}\n          </div>\n      )\n}","import React from 'react';\nimport NumberCart from './NumberCart';\n\nexport default function Header() {\n  return (\n    <div className=\"top\">\n      <div className=\"title\">\n        <br />\n        <img\n          src=\"https://www.conferecartoes.com.br/hubfs/confere-shop-logo.png\"\n          width=\"300px\"\n          alt=\"Logo\"\n        />\n      </div>\n      <br />\n      <div className=\"barra\">\n        <div>\n          <p>\n            <strong>Fique linda com nossos looks!</strong>\n          </p>\n          <p>Adicione no carrinho para comprar.</p>\n        </div>\n        <div className=\"cart\">\n          <div>\n            <a href=\"/Carrinho\">\n            <img\n              src={\n                'https://cdn.pixabay.com/photo/2013/07/12/14/53/cart-148964_960_720.png'\n              }\n              width=\"50px\"\n              alt=\"Ver carrinho\"\n            />\n          </a>\n          </div>\n          \n           <NumberCart/>\n          \n        </div>\n      </div>\n    </div>\n  );\n}\n\n// CABECALHO ONDE ESTÁ O ÍCONE DO CARRINHO\n","import React from  'react'\n\nexport default function Footer(){ \n  return(\n    <div className='footer'>\n        <p>Site Fictício para desafio Front-End da Confere.</p>\n        <p>Feito por &copy;Hugo Bascuñan - 2021</p> \n    </div>\n  )\n}\n\n// RODAPÉ","import React from 'react'\nimport Body from '../Components/Body';\nimport Header from '../Components/Header';\nimport Footer from '../Components/Footer';\n\nexport default function PageStore() {\n  return (\n      <div className='page'>\n        <Header />\n        <Body />\n        <Footer />\n      </div>\n  );\n}\n\n//PÁGINA DA LOJA INICIAL COM ROTA","import {BrowserRouter,Switch, Route} from 'react-router-dom';\nimport PageCart from './Pages/PageCart'\nimport PageStore from './Pages/PageStore'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={PageStore}/>\n        <Route path=\"/Carrinho\" exact component={PageCart}/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}